import { useEffect, useState } from 'react';
import './App.css';
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';

import Header from './pages/Header';
import NatalChartPage from './pages/NatalChartPage/NatalChartPage';
import TarotCardsPage from './pages/TarotCardsPage/TarotCardsPage';
import DreamPage from './pages/DreamPage/DreamPage';
import ZodiacPage from './pages/ZodiacPage/ZodiacPage';
import HelloPage from './pages/HelloPage/HelloPage';
import DayPrediction from './pages/DayPrediction/DayPrediction';
import RegistrationPage from './pages/RegistrationPage/RegistrationPage';

import { checkRegistration } from './api/CheckRegistration'; // —Ç–≤–æ–π get-—Ä–æ—É—Ç
import AstroLoader from './components/Loader/Loader'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–≤–æ–π –ª–æ–∞–¥–µ—Ä

// –¢–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è Telegram WebApp
declare global {
  interface Window {
    Telegram: any;
  }
}

function App() {
  // –ó–∞–≥–ª—É—à–∫–∞: –ø–æ–∫–∞ —Å—á–∏—Ç–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
  const [registered, setRegistered] = useState<boolean | null>(null);
  const [catalogOpen, setCatalogOpen] = useState(false);
  const [telegramId, setTelegramId] = useState<number | null>(null);

  const toggleCatalog = () => setCatalogOpen(prev => !prev);
  const closeCatalog = () => setCatalogOpen(false);

  useEffect(() => {
    // ================================
    // 1. –ü–æ–ª—É—á–∞–µ–º telegram_id
    // ================================
    let userId: number | null = null;

    // –ü—Ä–æ–±—É–µ–º –≤–∑—è—Ç—å –∏–∑ Telegram WebApp
    if (window.Telegram && window.Telegram.WebApp) {
      userId = window.Telegram.WebApp.initDataUnsafe?.user?.id ?? null;
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç Telegram ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º MOCK
    if (!userId) {
      console.log('No Telegram detected, using mock ID');
      userId = 665444333;
    }

    setTelegramId(userId);

    // ================================
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –±—ç–∫–µ
    // ================================
    if (userId) {
      checkRegistration(userId)
        .then(() => setRegistered(true))
        .catch(() => setRegistered(false));
    } else {
      setRegistered(false);
    }
  }, []);

  // ================================
  // 3. –ü–æ–∫–∞–∑ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
  // ================================
  if (registered === null) {
    return (
      <div className="App">
        <AstroLoader />
      </div>
    );
  }

  return (
    <Router>
      <div className="App">
        {!registered ? (
          <RegistrationPage setRegistered={setRegistered} telegramId={telegramId} />
        ) : (
          <>
            <Header />

            <Routes>
              <Route path="/" element={<HelloPage />} />
              <Route path="/natalChart" element={<NatalChartPage />} />
              <Route path="/tarotCards" element={<TarotCardsPage />} />
              <Route path="/dreams" element={<DreamPage />} />
              <Route path="/zodiac" element={<ZodiacPage />} />
              <Route path="/dayPrediction" element={<DayPrediction />} />
            </Routes>

            {/* Overlay */}
            {catalogOpen && <div className="overlay" onClick={closeCatalog} />}

            {/* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ */}
            <button
              className="catalogButton"
              onClick={toggleCatalog}
              aria-expanded={catalogOpen}
              aria-controls="catalogPanel"
            >
              –ö–∞—Ç–∞–ª–æ–≥
            </button>

            {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
            <div
              id="catalogPanel"
              className={`catalogPanel ${catalogOpen ? 'open' : ''}`}
              aria-hidden={!catalogOpen}
            >
              <button className="catalogItem">–ü–ª–∞—Ç–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã –∏ –ø–æ–¥–ø–∏—Å–∫–∞ ‚ú®</button>
              <button className="catalogItem">–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º ‚ùì</button>
              <button className="catalogItem">–ú–æ–π –±–∞–ª–∞–Ω—Å —Ä–∞—Å–∫–ª–∞–¥–æ–≤ üîÆ</button>
              <button className="catalogItem">–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚öôÔ∏è</button>
              <button className="catalogItem wide">–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ üôç‚Äç‚ôÄÔ∏è</button>
            </div>
          </>
        )}
      </div>
    </Router>
  );
}

export default App;
